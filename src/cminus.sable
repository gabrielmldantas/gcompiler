Package br.com.ufs.gcompiler; 

Helpers 
    digit = ['0' .. '9'];
    letter = ['a' .. 'z'] | ['A' .. 'Z']; 
    tab = 9;
    cr = 13;
    lf = 10;
    eol = cr lf | cr | lf;
    blank = (' ' | tab | eol)+;
    all = [0 .. 0xFF];
    not_line_break = [all - [cr + lf]];
    not_star = [all - '*'];
    not_star_slash = [not_star - '/'];
    semi = ';';

	int = 'int';
	void = 'void';
	string = 'string';
	while = 'while';
	if = 'if';
	else = 'else';
	return = 'return';
    
    line_comment = '//' not_line_break* eol;
    blk_comment_start = '/*';
  
States
	normal,
	comment;
  
Tokens
{normal}    int = int;
{normal}    string = string;
{normal}    void = void;
{normal}    if = if;
{normal}    else = else;
{normal}    return = return;
{normal}    while = while;
    
{normal}	num = digit+;
{normal}    id = letter+;
{normal}    blank = blank;
{normal}    string_literal = '"' not_line_break* '"';
    
{normal}    plus = '+';
{normal}    minus = '-';
{normal}    division = '/';
{normal}    multiplication = '*';
{normal}    less_than = '<';
{normal}    less_than_or_eq = '<=';
{normal}    greater_than = '>';
{normal}    greather_than_or_eq = '>=';
{normal}    equals = '==';
{normal}    not_equals = '!=';
{normal}    assign = '=';
{normal}    semi = semi+;
{normal}    comma = ',';
{normal}    left_parenthesis = '(';
{normal}    right_parenthesis = ')';
{normal}    left_bracket = '[';
{normal}    right_bracket = ']';
{normal}    left_brace = '{';
{normal}    right_brace = '}';

{normal}	line_comment = line_comment;

{normal->comment, comment}	blk_comment = blk_comment_start;
{comment, normal}	blk_comment_end = '*/';
{comment}	blk_comment_body = not_star_slash*;
{comment}	star = '*';
{comment}	slash = '/';

    
Ignored Tokens
	blank,
	line_comment;
    
    